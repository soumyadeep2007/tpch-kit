

 Finalize Aggregate  (cost=2154267.44..2154267.45 rows=1 width=32) (actual time=37952.572..37952.575 rows=1 loops=1)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=2154267.38..2154267.43 rows=3 width=32) (actual time=37850.888..37952.554 rows=3 loops=1)
         ->  Partial Aggregate  (cost=2154267.38..2154267.39 rows=1 width=32) (actual time=37917.543..37917.544 rows=1 loops=1)
               ->  Hash Join  (cost=60829.51..2154241.31 rows=3475 width=12) (actual time=643.265..37915.950 rows=1190 loops=1)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     Join Filter: (((part.p_brand = 'Brand#15'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '4'::numeric) AND (lineitem.l_quantity <= '14'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= '11'::numeric) AND (lineitem.l_quantity <= '21'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#51'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '22'::numeric) AND (lineitem.l_quantity <= '32'::numeric) AND (part.p_size <= 15)))
                     Rows Removed by Join Filter: 1879
                     Extra Text: (seg0)   Hash chain length 1.2 avg, 6 max, using 11840 of 32768 buckets.
                     ->  Seq Scan on lineitem  (cost=0.00..2084411.68 rows=3415383 width=21) (actual time=0.502..37031.028 rows=1243519 loops=1)
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '4'::numeric) AND (l_quantity <= '14'::numeric)) OR ((l_quantity >= '11'::numeric) AND (l_quantity <= '21'::numeric)) OR ((l_quantity >= '22'::numeric) AND (l_quantity <= '32'::numeric))))
                           Rows Removed by Filter: 58759791
                     ->  Hash  (cost=60646.66..60646.66 rows=14628 width=30) (actual time=617.427..617.427 rows=14602 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1169kB
                           ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=1182.53..60646.66 rows=14628 width=30) (actual time=29.009..613.936 rows=14602 loops=1)
                                 ->  Bitmap Heap Scan on part  (cost=1182.53..60451.62 rows=4876 width=30) (actual time=19.003..612.953 rows=4917 loops=1)
                                       Recheck Cond: (((p_size <= 5) AND (p_size >= 1) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_brand = 'Brand#15'::bpchar)) OR ((p_size <= 10) AND (p_size >= 1) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_brand = 'Brand#24'::bpchar)) OR ((p_size <= 15) AND (p_size >= 1) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_brand = 'Brand#51'::bpchar)))
                                       Rows Removed by Index Recheck: 1043658
                                       ->  BitmapOr  (cost=1182.53..1182.53 rows=6706 width=0) (actual time=16.031..16.034 rows=1 loops=1)
                                             ->  BitmapAnd  (cost=376.01..376.01 rows=1292 width=0) (actual time=6.008..6.009 rows=1 loops=1)
                                                   ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..12.01 rows=333333 width=0) (actual time=0.842..0.843 rows=320 loops=1)
                                                         Index Cond: ((p_size <= 5) AND (p_size >= 1))
                                                   ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..361.31 rows=7754 width=0) (actual time=4.574..4.574 rows=8071 loops=1)
                                                         Index Cond: ((p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_brand = 'Brand#15'::bpchar))
                                             ->  BitmapAnd  (cost=399.05..399.05 rows=2662 width=0) (actual time=4.825..4.826 rows=1 loops=1)
                                                   ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..12.02 rows=666667 width=0) (actual time=0.500..0.500 rows=320 loops=1)
                                                         Index Cond: ((p_size <= 10) AND (p_size >= 1))
                                                   ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..384.35 rows=7987 width=0) (actual time=4.834..4.834 rows=8048 loops=1)
                                                         Index Cond: ((p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_brand = 'Brand#24'::bpchar))
                                             ->  BitmapAnd  (cost=406.97..406.97 rows=2751 width=0) (actual time=4.842..4.842 rows=1 loops=1)
                                                   ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..12.02 rows=666667 width=0) (actual time=0.509..0.509 rows=320 loops=1)
                                                         Index Cond: ((p_size <= 15) AND (p_size >= 1))
                                                   ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..392.27 rows=8252 width=0) (actual time=4.675..4.675 rows=8197 loops=1)
                                                         Index Cond: ((p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_brand = 'Brand#51'::bpchar))
 Optimizer: Postgres-based planner
 Planning Time: 8.203 ms
   (slice0)    Executor memory: 227K bytes.
   (slice1)    Executor memory: 1413K bytes avg x 3 workers, 1413K bytes max (seg0).  Work_mem: 1169K bytes max.
   (slice2)    Executor memory: 6319K bytes avg x 3 workers, 6319K bytes max (seg0).
 Memory used:  128000kB
 Execution Time: 37958.991 ms
(40 rows)

