

 Finalize Aggregate  (cost=2115598.14..2115598.15 rows=1 width=32) (actual time=21544.318..21544.321 rows=1 loops=1)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=2115598.07..2115598.12 rows=3 width=32) (actual time=21435.345..21544.301 rows=3 loops=1)
         ->  Partial Aggregate  (cost=2115598.07..2115598.08 rows=1 width=32) (actual time=21433.606..21433.608 rows=1 loops=1)
               ->  Hash Join  (cost=20396.20..2115572.01 rows=3475 width=12) (actual time=574.467..21432.209 rows=1190 loops=1)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     Join Filter: (((part.p_brand = 'Brand#15'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '4'::numeric) AND (lineitem.l_quantity <= '14'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= '11'::numeric) AND (lineitem.l_quantity <= '21'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#51'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '22'::numeric) AND (lineitem.l_quantity <= '32'::numeric) AND (part.p_size <= 15)))
                     Rows Removed by Join Filter: 1879
                     Extra Text: (seg0)   Hash chain length 1.1 avg, 4 max, using 13121 of 65536 buckets.
                     ->  Seq Scan on lineitem  (cost=0.00..2086175.68 rows=3415383 width=21) (actual time=0.099..20613.325 rows=1243519 loops=1)
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '4'::numeric) AND (l_quantity <= '14'::numeric)) OR ((l_quantity >= '11'::numeric) AND (l_quantity <= '21'::numeric)) OR ((l_quantity >= '22'::numeric) AND (l_quantity <= '32'::numeric))))
                           Rows Removed by Filter: 58759791
                     ->  Hash  (cost=20213.35..20213.35 rows=14628 width=30) (actual time=560.045..560.045 rows=14602 loops=1)
                           Buckets: 65536  Batches: 1  Memory Usage: 1425kB
                           ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=8783.23..20213.35 rows=14628 width=30) (actual time=316.226..555.955 rows=14602 loops=1)
                                 ->  Bitmap Heap Scan on part  (cost=8783.23..20018.32 rows=4876 width=30) (actual time=320.658..556.628 rows=4917 loops=1)
                                       Recheck Cond: (((p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_brand = 'Brand#15'::bpchar) AND (p_size <= 5) AND (p_size >= 1)) OR ((p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_brand = 'Brand#24'::bpchar)) OR ((p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_brand = 'Brand#51'::bpchar)))
                                       Filter: ((p_size >= 1) AND (((p_brand = 'Brand#15'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#51'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                       Rows Removed by Filter: 11976
                                       ->  BitmapOr  (cost=8783.23..8783.23 rows=17032 width=0) (actual time=315.135..315.137 rows=1 loops=1)
                                             ->  BitmapAnd  (cost=8004.18..8004.18 rows=792 width=0) (actual time=119.078..119.079 rows=1 loops=1)
                                                   ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..361.31 rows=7754 width=0) (actual time=81.171..81.171 rows=8071 loops=1)
                                                         Index Cond: ((p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_brand = 'Brand#15'::bpchar))
                                                   ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..7640.18 rows=204400 width=0) (actual time=35.805..35.805 rows=200180 loops=1)
                                                         Index Cond: ((p_size <= 5) AND (p_size >= 1))
                                             ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..384.35 rows=7987 width=0) (actual time=55.088..55.088 rows=8048 loops=1)
                                                   Index Cond: ((p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_brand = 'Brand#24'::bpchar))
                                             ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..392.27 rows=8252 width=0) (actual time=56.113..56.113 rows=8197 loops=1)
                                                   Index Cond: ((p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_brand = 'Brand#51'::bpchar))
 Optimizer: Postgres-based planner
 Planning Time: 6.916 ms
   (slice0)    Executor memory: 253K bytes.
   (slice1)    Executor memory: 1490K bytes avg x 3 workers, 1490K bytes max (seg0).  Work_mem: 1425K bytes max.
   (slice2)    Executor memory: 262576K bytes avg x 3 workers, 262576K bytes max (seg0).
 Memory used:  128000kB
 Execution Time: 21551.564 ms
(35 rows)

