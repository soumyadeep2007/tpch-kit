

 Finalize Aggregate  (cost=2103345.21..2103345.22 rows=1 width=32) (actual time=38719.237..38719.240 rows=1 loops=1)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=2103345.14..2103345.19 rows=3 width=32) (actual time=38608.800..38719.219 rows=3 loops=1)
         ->  Partial Aggregate  (cost=2103345.14..2103345.15 rows=1 width=32) (actual time=38634.530..38634.531 rows=1 loops=1)
               ->  Hash Join  (cost=9907.27..2103319.07 rows=3475 width=12) (actual time=440.580..38632.141 rows=1190 loops=1)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     Join Filter: (((part.p_brand = 'Brand#15'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '4'::numeric) AND (lineitem.l_quantity <= '14'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= '11'::numeric) AND (lineitem.l_quantity <= '21'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#51'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '22'::numeric) AND (lineitem.l_quantity <= '32'::numeric) AND (part.p_size <= 15)))
                     Rows Removed by Join Filter: 1879
                     Extra Text: (seg0)   Hash chain length 1.2 avg, 6 max, using 11840 of 32768 buckets.
                     ->  Seq Scan on lineitem  (cost=0.00..2084411.68 rows=3415383 width=21) (actual time=0.492..37913.559 rows=1243519 loops=1)
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '4'::numeric) AND (l_quantity <= '14'::numeric)) OR ((l_quantity >= '11'::numeric) AND (l_quantity <= '21'::numeric)) OR ((l_quantity >= '22'::numeric) AND (l_quantity <= '32'::numeric))))
                           Rows Removed by Filter: 58759791
                     ->  Hash  (cost=9724.42..9724.42 rows=14628 width=30) (actual time=414.288..414.289 rows=14602 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1169kB
                           ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=1182.52..9724.42 rows=14628 width=30) (actual time=30.813..410.911 rows=14602 loops=1)
                                 ->  Bitmap Heap Scan on part  (cost=1182.52..9529.38 rows=4876 width=30) (actual time=20.215..405.076 rows=4917 loops=1)
                                       Recheck Cond: (((p_size <= 5) AND (p_size >= 1) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_brand = 'Brand#15'::bpchar)) OR ((p_size <= 10) AND (p_size >= 1) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_brand = 'Brand#24'::bpchar)) OR ((p_size <= 15) AND (p_size >= 1) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_brand = 'Brand#51'::bpchar)))
                                       Rows Removed by Index Recheck: 617674
                                       ->  BitmapOr  (cost=1182.52..1182.52 rows=4918 width=0) (actual time=17.358..17.361 rows=1 loops=1)
                                             ->  BitmapAnd  (cost=376.00..376.00 rows=801 width=0) (actual time=6.541..6.541 rows=1 loops=1)
                                                   ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..12.00 rows=206522 width=0) (actual time=1.313..1.313 rows=70 loops=1)
                                                         Index Cond: ((p_size <= 5) AND (p_size >= 1))
                                                   ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..361.31 rows=7754 width=0) (actual time=4.959..4.959 rows=8071 loops=1)
                                                         Index Cond: ((p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_brand = 'Brand#15'::bpchar))
                                             ->  BitmapAnd  (cost=399.05..399.05 rows=1606 width=0) (actual time=5.358..5.358 rows=1 loops=1)
                                                   ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..12.01 rows=402174 width=0) (actual time=0.629..0.629 rows=130 loops=1)
                                                         Index Cond: ((p_size <= 10) AND (p_size >= 1))
                                                   ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..384.35 rows=7987 width=0) (actual time=4.852..4.852 rows=8048 loops=1)
                                                         Index Cond: ((p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_brand = 'Brand#24'::bpchar))
                                             ->  BitmapAnd  (cost=406.97..406.97 rows=2512 width=0) (actual time=5.035..5.036 rows=1 loops=1)
                                                   ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..12.01 rows=608696 width=0) (actual time=0.591..0.591 rows=190 loops=1)
                                                         Index Cond: ((p_size <= 15) AND (p_size >= 1))
                                                   ->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..392.27 rows=8252 width=0) (actual time=4.731..4.731 rows=8197 loops=1)
                                                         Index Cond: ((p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_brand = 'Brand#51'::bpchar))
 Optimizer: Postgres-based planner
 Planning Time: 22.819 ms
   (slice0)    Executor memory: 227K bytes.
   (slice1)    Executor memory: 1413K bytes avg x 3 workers, 1413K bytes max (seg0).  Work_mem: 1169K bytes max.
   (slice2)    Executor memory: 6319K bytes avg x 3 workers, 6319K bytes max (seg0).
 Memory used:  128000kB
 Execution Time: 38728.215 ms
(40 rows)

