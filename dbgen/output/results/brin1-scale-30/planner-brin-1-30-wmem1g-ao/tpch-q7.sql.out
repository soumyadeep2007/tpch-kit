                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=1498286.56..1500349.08 rows=9639 width=92) (actual time=33040.529..33040.552 rows=4 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=1498286.56..1499819.24 rows=28892 width=92) (actual time=33040.507..33040.517 rows=12 loops=1)
         Merge Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Partial GroupAggregate  (cost=1498286.56..1499434.01 rows=9631 width=92) (actual time=32995.761..33039.158 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=1498286.56..1498426.40 rows=55938 width=72) (actual time=32973.223..32979.676 rows=58558 loops=1)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method:  quicksort  Memory: 30665kB
                     Executor Memory: 26567kB  Segments: 3  Max: 8862kB (segment 2)
                     ->  Hash Join  (cost=346040.02..1493875.39 rows=55938 width=72) (actual time=13945.714..32928.626 rows=58558 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'KENYA'::bpchar)) OR ((n1.n_name = 'KENYA'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 58405
                           Extra Text: (seg0)   Initial batch 0:
 (seg0)     Wrote 47557K bytes to inner workfile.
 (seg0)     Wrote 81429K bytes to outer workfile.
 (seg0)   Initial batches 1..3:
 (seg0)     Read 47557K bytes from inner workfile: 15853K avg x 3 nonempty batches, 15870K max.
 (seg0)     Read 81429K bytes from outer workfile: 27143K avg x 3 nonempty batches, 27209K max.
 (seg0)   Work file set: 3 files (0 compressed), max file size 16220160, min file size 32768, compression buffer size 0 bytes
 (seg0)   Hash chain length 2.5 avg, 12 max, using 471480 of 524288 buckets.
                           ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=7042.73..1148235.40 rows=1371586 width=50) (actual time=0.029..17757.279 rows=1462410 loops=1)
                                 Hash Key: lineitem.l_orderkey
                                 ->  Hash Join  (cost=7042.73..1120803.68 rows=1371586 width=50) (actual time=189.946..17529.619 rows=1462443 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       Extra Text: (seg1)   Hash chain length 1.2 avg, 5 max, using 20105 of 65536 buckets.
                                       ->  Bitmap Heap Scan on lineitem  (cost=4586.16..1046628.31 rows=18278944 width=28) (actual time=26.083..13763.800 rows=18233724 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Index Recheck: 116356
                                             ->  Bitmap Index Scan on lineitem_l_shipdate_idx  (cost=0.00..16.43 rows=18683545 width=0) (actual time=2.970..2.970 rows=5600 loops=1)
                                                   Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=2162.57..2162.57 rows=23520 width=30) (actual time=113.971..113.972 rows=24059 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 1969kB
                                             ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=1.18..2162.57 rows=23520 width=30) (actual time=2.305..107.377 rows=24059 loops=1)
                                                   ->  Hash Join  (cost=1.18..1848.97 rows=7840 width=30) (actual time=2.471..73.765 rows=8090 loops=1)
                                                         Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                         Extra Text: (seg2)   Hash chain length 1.0 avg, 1 max, using 2 of 65536 buckets.
                                                         ->  Seq Scan on supplier  (cost=0.00..1507.00 rows=100000 width=8) (actual time=0.492..54.601 rows=100172 loops=1)
                                                         ->  Hash  (cost=1.15..1.15 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 513kB
                                                               ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..1.15 rows=2 width=30) (actual time=0.004..0.007 rows=2 loops=1)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.12 rows=1 width=30) (actual time=0.649..0.656 rows=1 loops=1)
                                                                           Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'KENYA'::bpchar))
                                                                           Rows Removed by Filter: 9
                           ->  Hash  (cost=324297.28..324297.28 rows=1176000 width=34) (actual time=14138.581..14138.583 rows=1201994 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 20378kB
                                 ->  Hash Join  (cost=37567.06..324297.28 rows=1176000 width=34) (actual time=1124.346..13695.006 rows=1201994 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Extra Text: (seg0)   Hash chain length 2.9 avg, 12 max, using 122680 of 131072 buckets.
                                       ->  Seq Scan on orders  (cost=0.00..212236.00 rows=15000000 width=12) (actual time=0.496..6606.506 rows=15003291 loops=1)
                                       ->  Hash  (cost=33157.06..33157.06 rows=352800 width=30) (actual time=1123.265..1123.266 rows=359660 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 22801kB
                                             ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=1.18..33157.06 rows=352800 width=30) (actual time=1.629..1023.611 rows=359660 loops=1)
                                                   ->  Hash Join  (cost=1.18..28453.06 rows=117600 width=30) (actual time=1.321..1053.853 rows=120067 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         Extra Text: (seg2)   Hash chain length 1.0 avg, 1 max, using 2 of 65536 buckets.
                                                         ->  Seq Scan on customer  (cost=0.00..23340.00 rows=1500000 width=8) (actual time=0.551..809.446 rows=1501094 loops=1)
                                                         ->  Hash  (cost=1.15..1.15 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=1)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 513kB
                                                               ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=0.00..1.15 rows=2 width=30) (actual time=0.004..0.007 rows=2 loops=1)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.12 rows=1 width=30) (actual time=0.620..0.628 rows=1 loops=1)
                                                                           Filter: ((n_name = 'KENYA'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                                           Rows Removed by Filter: 9
 Optimizer: Postgres-based planner
 Planning Time: 12.850 ms
   (slice0)    Executor memory: 171K bytes.
 * (slice1)    Executor memory: 46005K bytes avg x 3 workers, 46005K bytes max (seg0).  Work_mem: 22801K bytes max, 78497K bytes wanted.
   (slice2)    Executor memory: 8931K bytes avg x 3 workers, 8933K bytes max (seg1).  Work_mem: 1969K bytes max.
   (slice3)    Executor memory: 751K bytes avg x 3 workers, 751K bytes max (seg0).  Work_mem: 513K bytes max.
   (slice4)    Executor memory: 185K bytes avg x 3 workers, 185K bytes max (seg0).
   (slice5)    Executor memory: 751K bytes avg x 3 workers, 751K bytes max (seg0).  Work_mem: 513K bytes max.
   (slice6)    Executor memory: 185K bytes avg x 3 workers, 185K bytes max (seg0).
 Memory used:  128000kB
 Memory wanted:  551373kB
 Execution Time: 33058.125 ms
(76 rows)

