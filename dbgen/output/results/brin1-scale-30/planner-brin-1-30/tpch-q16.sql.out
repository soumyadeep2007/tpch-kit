                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=180872.86..180873.17 rows=22 width=44) (actual time=18684.714..18709.058 rows=27840 loops=1)
   Merge Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
   ->  Sort  (cost=180872.86..180872.88 rows=7 width=44) (actual time=18683.755..18685.890 rows=9382 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method:  quicksort  Memory: 3570kB
         Executor Memory: 2935kB  Segments: 3  Max: 985kB (segment 0)
         ->  GroupAggregate  (cost=180872.59..180872.75 rows=7 width=44) (actual time=17460.437..18662.913 rows=9382 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=180872.59..180872.61 rows=7 width=40) (actual time=17460.314..18067.567 rows=1199737 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  external merge  Disk: 181344kB
                     Executor Memory: 127643kB  Segments: 3  Max: 42548kB (segment 0)
                     ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=143355.56..180872.49 rows=7 width=40) (actual time=7391.438..14883.046 rows=1199737 loops=1)
                           Hash Key: part.p_brand, part.p_type, part.p_size
                           ->  Hash Join  (cost=143355.56..180872.34 rows=7 width=40) (actual time=7387.424..10406.096 rows=1187209 loops=1)
                                 Hash Cond: (part.p_partkey = partsupp.ps_partkey)
                                 Extra Text: (seg2)   Initial batch 0:
 (seg2)     Wrote 191357K bytes to inner workfile.
 (seg2)     Wrote 15344K bytes to outer workfile.
 (seg2)   Overflow batches 1..7:
 (seg2)     Read 264377K bytes from inner workfile: 37769K avg x 7 nonempty batches, 69027K max.
 (seg2)     Wrote 73021K bytes to inner workfile: 24341K avg x 3 overflowing batches, 41720K max.
 (seg2)     Read 15344K bytes from outer workfile: 2192K avg x 7 nonempty batches, 2213K max.
 (seg2)   Work file set: 7 files (0 compressed), max file size 70680576, min file size 32768, compression buffer size 0 bytes
 (seg2)   Hash chain length 5.0 avg, 28 max, using 1592080 of 4194304 buckets.
                                 ->  Index Only Scan using part_ios_test1 on part  (cost=0.18..36337.17 rows=314591 width=40) (actual time=0.609..364.123 rows=296961 loops=1)
                                       Index Cond: (p_size = ANY ('{3,45,14,32,41,8,21,15}'::integer[]))
                                       Filter: ((p_brand <> 'Brand#55'::bpchar) AND ((p_type)::text !~~ 'LARGE ANODIZED%'::text))
                                       Rows Removed by Filter: 22986
                                       Heap Fetches: 319947
                                 ->  Hash  (cost=143355.28..143355.28 rows=8 width=8) (actual time=7386.127..7386.127 rows=8000358 loops=1)
                                       Buckets: 524288 (originally 262144)  Batches: 8 (originally 1)  Memory Usage: 59755kB
                                       ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=13.88..143355.28 rows=8 width=8) (actual time=0.758..5579.596 rows=8000358 loops=1)
                                             Hash Key: partsupp.ps_partkey
                                             ->  Hash Left Anti Semi (Not-In) Join  (cost=13.88..143355.11 rows=8 width=8) (actual time=1.256..4172.548 rows=8000604 loops=1)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   Extra Text: (seg1)   Hash chain length 1.0 avg, 1 max, using 155 of 262144 buckets.
                                                   ->  Seq Scan on partsupp  (cost=0.00..123339.00 rows=8000000 width=8) (actual time=0.064..1791.908 rows=8004645 loops=1)
                                                   ->  Hash  (cost=13.51..13.51 rows=30 width=4) (actual time=0.105..0.106 rows=155 loops=1)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 2054kB
                                                         ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.14..13.51 rows=30 width=4) (actual time=0.016..0.065 rows=155 loops=1)
                                                               ->  Index Only Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..13.11 rows=10 width=4) (actual time=0.497..0.862 rows=60 loops=1)
                                                                     Heap Fetches: 60
 Optimizer: Postgres-based planner
 Planning Time: 3.842 ms
   (slice0)    Executor memory: 114K bytes.
 * (slice1)    Executor memory: 43526K bytes avg x 3 workers, 43532K bytes max (seg0).  Work_mem: 42548K bytes max, 152255K bytes wanted.
 * (slice2)    Executor memory: 64129K bytes avg x 3 workers, 64134K bytes max (seg1).  Work_mem: 59755K bytes max, 316610K bytes wanted.
   (slice3)    Executor memory: 2112K bytes avg x 3 workers, 2112K bytes max (seg0).  Work_mem: 2054K bytes max.
   (slice4)    Executor memory: 113K bytes avg x 3 workers, 113K bytes max (seg0).
 Memory used:  128000kB
 Memory wanted:  1583949kB
 Execution Time: 18727.705 ms
(53 rows)

