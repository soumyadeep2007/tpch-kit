                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=1336068.13..1336068.44 rows=22 width=44)
   Merge Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
   ->  Sort  (cost=1336068.13..1336068.15 rows=7 width=44)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=1336067.86..1336068.03 rows=7 width=44)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=1336067.86..1336067.88 rows=7 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=28252.48..1336067.76 rows=7 width=40)
                           Hash Key: part.p_brand, part.p_type, part.p_size
                           ->  Hash Join  (cost=28252.48..1336067.61 rows=7 width=40)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=9.57..1307824.61 rows=8 width=8)
                                       Hash Key: partsupp.ps_partkey
                                       ->  Hash Left Anti Semi (Not-In) Join  (cost=9.57..1307824.45 rows=8 width=8)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..1287812.66 rows=8000000 width=8)
                                             ->  Hash  (cost=9.20..9.20 rows=30 width=4)
                                                   ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.14..9.20 rows=30 width=4)
                                                         ->  Index Only Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.80 rows=10 width=4)
                                 ->  Hash  (cost=24300.89..24300.89 rows=315362 width=40)
                                       ->  Bitmap Heap Scan on part  (cost=12850.89..24300.89 rows=315362 width=40)
                                             Recheck Cond: (p_size = ANY ('{3,45,14,32,41,8,21,15}'::integer[]))
                                             Filter: ((p_brand <> 'Brand#55'::bpchar) AND ((p_type)::text !~~ 'LARGE ANODIZED%'::text))
                                             ->  Bitmap Index Scan on part_ios_test1  (cost=0.00..12772.05 rows=325200 width=0)
                                                   Index Cond: (p_size = ANY ('{3,45,14,32,41,8,21,15}'::integer[]))
 Optimizer: Postgres-based planner
(27 rows)

