                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=6555322.91..6555968.09 rows=9631 width=92)
   Merge Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  GroupAggregate  (cost=6555322.91..6555839.68 rows=3210 width=92)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=6555322.91..6555388.70 rows=26320 width=72)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=4494068.08..6553390.53 rows=26320 width=72)
                     Hash Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Hash Join  (cost=4494068.08..6552864.13 rows=26320 width=72)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'KENYA'::bpchar)) OR ((n1.n_name = 'KENYA'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           ->  Hash Join  (cost=278980.14..2324068.59 rows=1176000 width=34)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..1970594.23 rows=15000000 width=12)
                                 ->  Hash  (cost=274570.14..274570.14 rows=352800 width=30)
                                       ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=2.16..274570.14 rows=352800 width=30)
                                             ->  Hash Join  (cost=2.16..269866.14 rows=117600 width=30)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..264752.09 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.14..2.14 rows=2 width=30)
                                                         ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..2.14 rows=2 width=30)
                                                               ->  Seq Scan on nation n2  (cost=0.00..2.11 rows=1 width=30)
                                                                     Filter: ((n_name = 'KENYA'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                           ->  Hash  (cost=4193659.52..4193659.52 rows=1434115 width=50)
                                 ->  Redistribute Motion 3:3  (slice5; segments: 3)  (cost=3101491.58..4193659.52 rows=1434115 width=50)
                                       Hash Key: lineitem.l_orderkey
                                       ->  Hash Join  (cost=3101491.58..4164977.22 rows=1434115 width=50)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Bitmap Heap Scan on lineitem  (cost=3084185.82..4074369.57 rows=18496664 width=28)
                                                   Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on lineitem_l_shipdate_idx  (cost=0.00..3079561.66 rows=18496664 width=0)
                                                         Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=17011.76..17011.76 rows=23520 width=30)
                                                   ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=2.16..17011.76 rows=23520 width=30)
                                                         ->  Hash Join  (cost=2.16..16698.16 rows=7840 width=30)
                                                               Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on supplier  (cost=0.00..16355.20 rows=100000 width=8)
                                                               ->  Hash  (cost=2.14..2.14 rows=2 width=30)
                                                                     ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..2.14 rows=2 width=30)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..2.11 rows=1 width=30)
                                                                                 Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'KENYA'::bpchar))
 Optimizer: Postgres-based planner
(42 rows)

