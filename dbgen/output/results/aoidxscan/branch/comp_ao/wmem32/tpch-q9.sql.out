                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=12507317.62..12507319.06 rows=56 width=66)
   Merge Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  GroupAggregate  (cost=12507317.62..12507318.32 rows=19 width=66)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=12507317.62..12507317.67 rows=19 width=57)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=10480471.12..12507317.23 rows=19 width=57)
                     Hash Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Hash Join  (cost=10480471.12..12507316.85 rows=19 width=57)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=10480468.95..12507314.35 rows=19 width=31)
                                 Hash Key: supplier.s_nationkey
                                 ->  Hash Join  (cost=10480468.95..12507313.98 rows=19 width=31)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=10462863.75..12489708.54 rows=19 width=35)
                                             Hash Key: lineitem.l_suppkey
                                             ->  Hash Join  (cost=10462863.75..12489708.17 rows=19 width=35)
                                                   Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                   ->  Seq Scan on orders  (cost=0.00..1970594.23 rows=15000000 width=12)
                                                   ->  Hash  (cost=10462863.23..10462863.23 rows=42 width=39)
                                                         ->  Redistribute Motion 3:3  (slice5; segments: 3)  (cost=1728385.14..10462863.23 rows=42 width=39)
                                                               Hash Key: lineitem.l_orderkey
                                                               ->  Hash Join  (cost=1728385.14..10462862.40 rows=42 width=39)
                                                                     Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                                                     ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=310806.49..9007083.00 rows=3030276 width=37)
                                                                           Hash Key: lineitem.l_partkey, lineitem.l_suppkey
                                                                           ->  Hash Join  (cost=310806.49..8946477.49 rows=3030276 width=37)
                                                                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                                                 ->  Seq Scan on lineitem  (cost=0.00..8447869.66 rows=59999456 width=33)
                                                                                 ->  Hash  (cost=307018.61..307018.61 rows=303030 width=4)
                                                                                       ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..307018.61 rows=303030 width=4)
                                                                                             ->  Seq Scan on part  (cost=0.00..302978.20 rows=101010 width=4)
                                                                                                   Filter: ((p_name)::text ~~ '%navajo%'::text)
                                                                     ->  Hash  (cost=1287812.66..1287812.66 rows=8000000 width=14)
                                                                           ->  Seq Scan on partsupp  (cost=0.00..1287812.66 rows=8000000 width=14)
                                       ->  Hash  (cost=16355.20..16355.20 rows=100000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..16355.20 rows=100000 width=8)
                           ->  Hash  (cost=2.07..2.07 rows=8 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..2.07 rows=8 width=30)
 Optimizer: Postgres-based planner
(40 rows)

