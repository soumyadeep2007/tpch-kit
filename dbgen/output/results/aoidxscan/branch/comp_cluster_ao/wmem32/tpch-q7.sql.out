                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6479935.64..6482032.80 rows=9651 width=92)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=6479935.64..6481502.24 rows=28933 width=92)
         Merge Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Partial GroupAggregate  (cost=6479935.64..6481116.46 rows=9644 width=92)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=6479935.64..6480080.22 rows=57831 width=72)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Hash Join  (cost=4416161.34..6475361.30 rows=57831 width=72)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'KENYA'::bpchar)) OR ((n1.n_name = 'KENYA'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           ->  Hash Join  (cost=278980.14..2323861.59 rows=1176000 width=34)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..1970387.23 rows=15000000 width=12)
                                 ->  Hash  (cost=274570.14..274570.14 rows=352800 width=30)
                                       ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=2.16..274570.14 rows=352800 width=30)
                                             ->  Hash Join  (cost=2.16..269866.14 rows=117600 width=30)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..264752.09 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.14..2.14 rows=2 width=30)
                                                         ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..2.14 rows=2 width=30)
                                                               ->  Seq Scan on nation n2  (cost=0.00..2.11 rows=1 width=30)
                                                                     Filter: ((n_name = 'KENYA'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                           ->  Hash  (cost=4115994.15..4115994.15 rows=1418004 width=50)
                                 ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=3032469.61..4115994.15 rows=1418004 width=50)
                                       Hash Key: lineitem.l_orderkey
                                       ->  Hash Join  (cost=3032469.61..4087634.07 rows=1418004 width=50)
                                             Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                             ->  Bitmap Heap Scan on lineitem  (cost=3015255.40..3998713.36 rows=18086785 width=28)
                                                   Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on lineitem_l_shipdate_idx  (cost=0.00..3010733.71 rows=18086785 width=0)
                                                         Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=16920.20..16920.20 rows=23520 width=30)
                                                   ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=2.16..16920.20 rows=23520 width=30)
                                                         ->  Hash Join  (cost=2.16..16606.60 rows=7840 width=30)
                                                               Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on supplier  (cost=0.00..16263.65 rows=100000 width=8)
                                                               ->  Hash  (cost=2.14..2.14 rows=2 width=30)
                                                                     ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=0.00..2.14 rows=2 width=30)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..2.11 rows=1 width=30)
                                                                                 Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'KENYA'::bpchar))
 Optimizer: Postgres-based planner
(42 rows)

