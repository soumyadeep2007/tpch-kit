                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=1366351.88..1370885.22 rows=320000 width=36)
   Merge Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
   InitPlan 1 (returns $0)  (slice5)
     ->  Finalize Aggregate  (cost=1340290.70..1340290.71 rows=1 width=32)
           ->  Gather Motion 3:1  (slice6; segments: 3)  (cost=1340290.63..1340290.68 rows=3 width=32)
                 ->  Partial Aggregate  (cost=1340290.63..1340290.64 rows=1 width=32)
                       ->  Hash Join  (cost=16877.97..1337890.63 rows=320000 width=10)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Seq Scan on partsupp partsupp_1  (cost=0.00..1287812.66 rows=8000000 width=14)
                             ->  Hash  (cost=16727.97..16727.97 rows=12000 width=4)
                                   ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=2.12..16727.97 rows=12000 width=4)
                                         ->  Hash Join  (cost=2.12..16567.97 rows=4000 width=4)
                                               Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                               ->  Seq Scan on supplier supplier_1  (cost=0.00..16263.65 rows=100000 width=8)
                                               ->  Hash  (cost=2.11..2.11 rows=1 width=4)
                                                     ->  Broadcast Motion 3:3  (slice8; segments: 3)  (cost=0.00..2.11 rows=1 width=4)
                                                           ->  Seq Scan on nation nation_1  (cost=0.00..2.09 rows=1 width=4)
                                                                 Filter: (n_name = 'JORDAN'::bpchar)
   ->  Sort  (cost=1366351.88..1366618.55 rows=106667 width=36)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         ->  HashAggregate  (cost=1351453.13..1357443.75 rows=106667 width=36)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $0)
               ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=16877.97..1344290.63 rows=320000 width=14)
                     Hash Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=16877.97..1337890.63 rows=320000 width=14)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..1287812.66 rows=8000000 width=18)
                           ->  Hash  (cost=16727.97..16727.97 rows=12000 width=4)
                                 ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=2.12..16727.97 rows=12000 width=4)
                                       ->  Hash Join  (cost=2.12..16567.97 rows=4000 width=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..16263.65 rows=100000 width=8)
                                             ->  Hash  (cost=2.11..2.11 rows=1 width=4)
                                                   ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..2.11 rows=1 width=4)
                                                         ->  Seq Scan on nation  (cost=0.00..2.09 rows=1 width=4)
                                                               Filter: (n_name = 'JORDAN'::bpchar)
 Optimizer: Postgres-based planner
(38 rows)

