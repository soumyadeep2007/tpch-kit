                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=23967017.53..24684656.37 rows=30755950 width=75)
   Merge Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
   ->  GroupAggregate  (cost=23967017.53..24274577.03 rows=10251983 width=75)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=23967017.53..23992647.48 rows=10251983 width=48)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=13052848.44..22694360.32 rows=10251983 width=48)
                     Hash Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
                     ->  Hash Join  (cost=13052848.44..22489320.65 rows=10251983 width=48)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..8442022.66 rows=59999456 width=13)
                           ->  Hash  (cost=12937962.22..12937962.22 rows=7689057 width=51)
                                 ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=10666677.27..12937962.22 rows=7689057 width=51)
                                       ->  Hash Join  (cost=10666677.27..12835441.46 rows=2563019 width=51)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=10383175.18..12518985.02 rows=2563019 width=32)
                                                   Hash Key: orders.o_custkey
                                                   ->  Hash Join  (cost=10383175.18..12467724.64 rows=2563019 width=32)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Seq Scan on orders  (cost=0.00..1970387.23 rows=15000000 width=24)
                                                         ->  Hash  (cost=10348634.44..10348634.44 rows=2563019 width=8)
                                                               ->  Finalize HashAggregate  (cost=10164519.22..10323004.25 rows=2563019 width=8)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '314'::numeric)
                                                                     Planned Partitions: 64
                                                                     ->  Redistribute Motion 3:3  (slice5; segments: 3)  (cost=9034986.04..9826229.73 rows=22092375 width=40)
                                                                           Hash Key: lineitem_1.l_orderkey
                                                                           ->  Partial HashAggregate  (cost=9034986.04..9384382.24 rows=22092375 width=40)
                                                                                 Group Key: lineitem_1.l_orderkey
                                                                                 Planned Partitions: 128
                                                                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..8442022.66 rows=59999456 width=13)
                                             ->  Hash  (cost=264752.09..264752.09 rows=1500000 width=23)
                                                   ->  Seq Scan on customer  (cost=0.00..264752.09 rows=1500000 width=23)
 Optimizer: Postgres-based planner
(34 rows)

