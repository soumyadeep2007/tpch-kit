                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3644496.67..3644496.95 rows=20 width=202)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=3644496.67..3644497.52 rows=60 width=202)
         Merge Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))))
         ->  Limit  (cost=3644496.67..3644496.72 rows=20 width=202)
               ->  Sort  (cost=3644351.74..3645800.99 rows=579700 width=202)
                     Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
                     ->  HashAggregate  (cost=3618000.15..3628926.13 rows=579700 width=202)
                           Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                           Planned Partitions: 8
                           ->  Hash Join  (cost=2669368.65..3588788.71 rows=579700 width=182)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=2669365.94..3581441.19 rows=579700 width=160)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=2377806.85..3272955.54 rows=579700 width=16)
                                             Hash Key: orders.o_custkey
                                             ->  Hash Join  (cost=2377806.85..3261361.54 rows=579700 width=16)
                                                   Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                                   ->  Bitmap Heap Scan on lineitem  (cost=2013044.64..2847823.16 rows=14703867 width=20)
                                                         Recheck Cond: (l_returnflag = 'R'::bpchar)
                                                         ->  Bitmap Index Scan on lineitem_l_orderkey_idx_l_returnflag  (cost=0.00..2009368.68 rows=14703867 width=0)
                                                   ->  Hash  (cost=342585.64..342585.64 rows=1774125 width=12)
                                                         ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=93200.98..342585.64 rows=1774125 width=12)
                                                               ->  Bitmap Heap Scan on orders  (cost=93200.98..318930.64 rows=591375 width=12)
                                                                     Recheck Cond: ((o_orderdate >= '1993-10-01'::date) AND (o_orderdate < '1994-01-01 00:00:00'::timestamp without time zone))
                                                                     ->  Bitmap Index Scan on orders_o_orderdate_idx  (cost=0.00..93053.14 rows=591375 width=0)
                                                                           Index Cond: ((o_orderdate >= '1993-10-01'::date) AND (o_orderdate < '1994-01-01 00:00:00'::timestamp without time zone))
                                       ->  Hash  (cost=264752.09..264752.09 rows=1500000 width=148)
                                             ->  Seq Scan on customer  (cost=0.00..264752.09 rows=1500000 width=148)
                                 ->  Hash  (cost=2.40..2.40 rows=25 width=30)
                                       ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..2.40 rows=25 width=30)
                                             ->  Seq Scan on nation  (cost=0.00..2.07 rows=8 width=30)
 Optimizer: Postgres-based planner
(32 rows)

