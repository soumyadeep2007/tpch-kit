                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9890503.39..9890503.45 rows=25 width=58)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   ->  Finalize GroupAggregate  (cost=9889595.59..9890502.81 rows=25 width=58)
         Group Key: nation.n_name
         ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=9889595.59..9890501.94 rows=75 width=58)
               Merge Key: nation.n_name
               ->  Partial GroupAggregate  (cost=9889595.59..9890500.94 rows=25 width=58)
                     Group Key: nation.n_name
                     ->  Sort  (cost=9889595.59..9889776.60 rows=72403 width=38)
                           Sort Key: nation.n_name
                           ->  Hash Join  (cost=982826.10..9883751.33 rows=72403 width=38)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Hash Join  (cost=958062.45..9848761.02 rows=1810027 width=50)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..8442022.66 rows=59999456 width=24)
                                       ->  Hash  (cost=938110.30..938110.30 rows=1357532 width=42)
                                             ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=633624.79..938110.30 rows=1357532 width=42)
                                                   ->  Hash Join  (cost=633624.79..920009.87 rows=452511 width=42)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=356494.23..629869.63 rows=2262554 width=12)
                                                               Hash Key: orders.o_custkey
                                                               ->  Bitmap Heap Scan on orders  (cost=356494.23..584618.55 rows=2262554 width=12)
                                                                     Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate < '1996-01-01 00:00:00'::timestamp without time zone))
                                                                     ->  Bitmap Index Scan on orders_o_orderdate_idx  (cost=0.00..355928.60 rows=2262554 width=0)
                                                                           Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate < '1996-01-01 00:00:00'::timestamp without time zone))
                                                         ->  Hash  (cost=273380.56..273380.56 rows=300000 width=38)
                                                               ->  Hash Join  (cost=3.47..273380.56 rows=300000 width=38)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..264752.09 rows=1500000 width=8)
                                                                     ->  Hash  (cost=3.40..3.40 rows=5 width=30)
                                                                           ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=1.23..3.40 rows=5 width=30)
                                                                                 ->  Hash Join  (cost=1.23..3.34 rows=2 width=30)
                                                                                       Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                       ->  Seq Scan on nation  (cost=0.00..2.07 rows=8 width=34)
                                                                                       ->  Hash  (cost=1.22..1.22 rows=1 width=4)
                                                                                             ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..1.22 rows=1 width=4)
                                                                                                   ->  Seq Scan on region  (cost=0.00..1.20 rows=1 width=4)
                                                                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                 ->  Hash  (cost=20263.65..20263.65 rows=300000 width=8)
                                       ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=0.00..20263.65 rows=300000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..16263.65 rows=100000 width=8)
 Optimizer: Postgres-based planner
(42 rows)

