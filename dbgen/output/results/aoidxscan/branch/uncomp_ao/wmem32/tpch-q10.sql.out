                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1534130.97..1534131.25 rows=20 width=202)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=1534130.97..1534131.82 rows=60 width=202)
         Merge Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))))
         ->  Limit  (cost=1534130.97..1534131.02 rows=20 width=202)
               ->  Sort  (cost=1533985.12..1535443.54 rows=583364 width=202)
                     Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
                     ->  HashAggregate  (cost=1507466.96..1518462.01 rows=583364 width=202)
                           Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                           Planned Partitions: 8
                           ->  Hash Join  (cost=1435471.66..1478070.86 rows=583364 width=182)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=1435469.93..1470677.91 rows=583364 width=160)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Seq Scan on customer  (cost=0.00..23340.00 rows=1500000 width=148)
                                       ->  Hash  (cost=1428177.87..1428177.87 rows=583364 width=16)
                                             ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=332732.26..1428177.87 rows=583364 width=16)
                                                   Hash Key: orders.o_custkey
                                                   ->  Hash Join  (cost=332732.26..1416510.58 rows=583364 width=16)
                                                         Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                                         ->  Seq Scan on lineitem  (cost=0.00..1034421.20 rows=14905865 width=20)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                                         ->  Hash  (cost=310717.94..310717.94 rows=1761145 width=12)
                                                               ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..310717.94 rows=1761145 width=12)
                                                                     ->  Seq Scan on orders  (cost=0.00..287236.00 rows=587048 width=12)
                                                                           Filter: ((o_orderdate >= '1993-10-01'::date) AND (o_orderdate < '1994-01-01 00:00:00'::timestamp without time zone))
                                 ->  Hash  (cost=1.42..1.42 rows=25 width=30)
                                       ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=0.00..1.42 rows=25 width=30)
                                             ->  Seq Scan on nation  (cost=0.00..1.08 rows=8 width=30)
 Optimizer: Postgres-based planner
(29 rows)

