                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=1424978.47..1425913.93 rows=2406 width=40)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=1424978.47..1425769.57 rows=7218 width=72)
         Merge Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Partial GroupAggregate  (cost=1424978.47..1425673.33 rows=2406 width=72)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=1424978.47..1425050.33 rows=28744 width=46)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Hash Join  (cost=1107281.15..1422849.84 rows=28744 width=46)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=1107279.42..1422340.21 rows=28744 width=20)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=1104522.42..1419220.31 rows=28744 width=20)
                                       Hash Key: lineitem.l_suppkey
                                       ->  Hash Join  (cost=1104522.42..1418645.43 rows=28744 width=20)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=1068805.12..1382101.74 rows=143720 width=24)
                                                   Hash Key: orders.o_custkey
                                                   ->  Hash Join  (cost=1068805.12..1379227.35 rows=143720 width=24)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Seq Scan on orders  (cost=0.00..287236.00 rows=4587760 width=16)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=1062931.35..1062931.35 rows=469901 width=24)
                                                               ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=6913.17..1062931.35 rows=469901 width=24)
                                                                     Hash Key: lineitem.l_orderkey
                                                                     ->  Hash Join  (cost=6913.17..1053533.32 rows=469901 width=24)
                                                                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                                           ->  Seq Scan on lineitem  (cost=0.00..884422.56 rows=59999456 width=28)
                                                                           ->  Hash  (cost=6323.17..6323.17 rows=47200 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.18..6323.17 rows=47200 width=4)
                                                                                       ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.18..5693.84 rows=15733 width=4)
                                                                                             Index Cond: (p_type = 'LARGE PLATED COPPER'::text)
                                             ->  Hash  (cost=31967.30..31967.30 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.30..31967.30 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..23340.00 rows=1500000 width=8)
                                                         ->  Hash  (cost=2.24..2.24 rows=5 width=4)
                                                               ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=1.05..2.24 rows=5 width=4)
                                                                     ->  Hash Join  (cost=1.05..2.18 rows=2 width=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.08 rows=8 width=8)
                                                                           ->  Hash  (cost=1.04..1.04 rows=1 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..1.04 rows=1 width=4)
                                                                                       ->  Seq Scan on region  (cost=0.00..1.02 rows=1 width=4)
                                                                                             Filter: (r_name = 'AFRICA'::bpchar)
                                 ->  Hash  (cost=1507.00..1507.00 rows=100000 width=8)
                                       ->  Seq Scan on supplier  (cost=0.00..1507.00 rows=100000 width=8)
                           ->  Hash  (cost=1.42..1.42 rows=25 width=30)
                                 ->  Broadcast Motion 3:3  (slice8; segments: 3)  (cost=0.00..1.42 rows=25 width=30)
                                       ->  Seq Scan on nation n2  (cost=0.00..1.08 rows=8 width=30)
 Optimizer: Postgres-based planner
(51 rows)

