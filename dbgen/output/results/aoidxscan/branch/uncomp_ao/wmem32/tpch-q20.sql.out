                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=1833130.08..1833130.14 rows=5 width=51)
   Merge Key: supplier.s_name
   ->  Sort  (cost=1833130.08..1833130.08 rows=2 width=51)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=1833129.95..1833130.07 rows=2 width=51)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  HashAggregate  (cost=1833128.81..1833128.89 rows=8 width=55)
                     Group Key: (RowIdExpr)
                     ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=1831370.66..1833128.79 rows=8 width=55)
                           Hash Key: (RowIdExpr)
                           ->  Hash Join  (cost=1831370.66..1833128.63 rows=8 width=55)
                                 Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Seq Scan on supplier  (cost=0.00..1507.00 rows=100000 width=59)
                                 ->  Hash  (cost=1831370.56..1831370.56 rows=8 width=8)
                                       ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=1662436.43..1831370.56 rows=8 width=8)
                                             Hash Key: lineitem.l_suppkey
                                             ->  Hash Join  (cost=1662436.43..1831370.41 rows=8 width=8)
                                                   Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                                   Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                                   ->  HashAggregate  (cost=1480879.72..1564866.70 rows=4854109 width=40)
                                                         Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                                         Planned Partitions: 16
                                                         ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=0.00..1367516.89 rows=9154853 width=13)
                                                               Hash Key: lineitem.l_partkey, lineitem.l_suppkey
                                                               ->  Seq Scan on lineitem  (cost=0.00..1184419.84 rows=9154853 width=13)
                                                                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   ->  Hash  (cost=179132.48..179132.48 rows=161616 width=16)
                                                         ->  Hash Join  (cost=37684.31..179132.48 rows=161616 width=16)
                                                               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                               ->  Seq Scan on partsupp  (cost=0.00..118832.00 rows=8000000 width=12)
                                                               ->  Hash  (cost=36169.16..36169.16 rows=121212 width=4)
                                                                     ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..36169.16 rows=121212 width=4)
                                                                           ->  Seq Scan on part  (cost=0.00..34553.00 rows=40404 width=4)
                                                                                 Filter: ((p_name)::text ~~ 'smoke%'::text)
               ->  Hash  (cost=1.12..1.12 rows=1 width=4)
                     ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=0.00..1.12 rows=1 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.10 rows=1 width=4)
                                 Filter: (n_name = 'MOROCCO'::bpchar)
 Optimizer: Postgres-based planner
(39 rows)

