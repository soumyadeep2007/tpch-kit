                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=443657.93..443658.24 rows=22 width=192)
   Merge Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
   ->  Sort  (cost=443657.93..443657.95 rows=7 width=192)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=397705.08..443657.82 rows=7 width=192)
               Hash Cond: ((partsupp_1.ps_partkey = part.p_partkey) AND ((min(partsupp_1.ps_supplycost)) = partsupp.ps_supplycost))
               ->  HashAggregate  (cost=216278.17..234231.11 rows=1599984 width=36)
                     Group Key: partsupp_1.ps_partkey
                     Planned Partitions: 8
                     ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=3634.30..200465.82 rows=1599984 width=10)
                           Hash Key: partsupp_1.ps_partkey
                           ->  Hash Join  (cost=3634.30..168466.14 rows=1599984 width=10)
                                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..118832.00 rows=8000000 width=14)
                                 ->  Hash  (cost=2884.30..2884.30 rows=60000 width=4)
                                       ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=2.30..2884.30 rows=60000 width=4)
                                             ->  Hash Join  (cost=2.30..2084.30 rows=20000 width=4)
                                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                   ->  Seq Scan on supplier supplier_1  (cost=0.00..1507.00 rows=100000 width=8)
                                                   ->  Hash  (cost=2.24..2.24 rows=5 width=4)
                                                         ->  Broadcast Motion 3:3  (slice4; segments: 3)  (cost=1.05..2.24 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.05..2.18 rows=2 width=4)
                                                                     Hash Cond: (nation_1.n_regionkey = region_1.r_regionkey)
                                                                     ->  Seq Scan on nation nation_1  (cost=0.00..1.08 rows=8 width=8)
                                                                     ->  Hash  (cost=1.04..1.04 rows=1 width=4)
                                                                           ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=0.00..1.04 rows=1 width=4)
                                                                                 ->  Seq Scan on region region_1  (cost=0.00..1.02 rows=1 width=4)
                                                                                       Filter: (r_name = 'EUROPE'::bpchar)
               ->  Hash  (cost=181200.13..181200.13 rows=15119 width=202)
                     ->  Redistribute Motion 3:3  (slice6; segments: 3)  (cost=38363.22..181200.13 rows=15119 width=202)
                           Hash Key: part.p_partkey
                           ->  Hash Join  (cost=38363.22..180897.75 rows=15119 width=202)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Redistribute Motion 3:3  (slice7; segments: 3)  (cost=36028.92..178128.78 rows=75595 width=44)
                                       Hash Key: partsupp.ps_suppkey
                                       ->  Hash Join  (cost=36028.92..176616.87 rows=75595 width=44)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..118832.00 rows=8000000 width=14)
                                             ->  Hash  (cost=35320.21..35320.21 rows=56696 width=30)
                                                   ->  Broadcast Motion 3:3  (slice8; segments: 3)  (cost=1289.03..35320.21 rows=56696 width=30)
                                                         ->  Bitmap Heap Scan on part  (cost=1289.03..34564.26 rows=18899 width=30)
                                                               Recheck Cond: (p_size = 1)
                                                               Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                                               ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..1284.30 rows=42067 width=0)
                                                                     Index Cond: (p_size = 1)
                                 ->  Hash  (cost=2084.30..2084.30 rows=20000 width=166)
                                       ->  Hash Join  (cost=2.30..2084.30 rows=20000 width=166)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..1507.00 rows=100000 width=144)
                                             ->  Hash  (cost=2.24..2.24 rows=5 width=30)
                                                   ->  Broadcast Motion 3:3  (slice9; segments: 3)  (cost=1.05..2.24 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.05..2.18 rows=2 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.08 rows=8 width=34)
                                                               ->  Hash  (cost=1.04..1.04 rows=1 width=4)
                                                                     ->  Broadcast Motion 3:3  (slice10; segments: 3)  (cost=0.00..1.04 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.02 rows=1 width=4)
                                                                                 Filter: (r_name = 'EUROPE'::bpchar)
 Optimizer: Postgres-based planner
(59 rows)

