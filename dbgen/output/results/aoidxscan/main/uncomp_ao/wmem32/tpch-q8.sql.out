                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=1448955.05..1449890.50 rows=2406 width=40)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=1448955.05..1449746.14 rows=7218 width=72)
         Merge Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Partial GroupAggregate  (cost=1448955.05..1449649.90 rows=2406 width=72)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=1448955.05..1449026.91 rows=28744 width=46)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Hash Join  (cost=1131257.73..1446826.42 rows=28744 width=46)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=1131256.00..1446316.78 rows=28744 width=20)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=1128499.00..1443196.89 rows=28744 width=20)
                                       Hash Key: lineitem.l_suppkey
                                       ->  Hash Join  (cost=1128499.00..1442622.01 rows=28744 width=20)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=1092781.70..1406078.32 rows=143720 width=24)
                                                   Hash Key: orders.o_custkey
                                                   ->  Hash Join  (cost=1092781.70..1403203.93 rows=143720 width=24)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Seq Scan on orders  (cost=0.00..287236.00 rows=4587760 width=16)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=1086907.93..1086907.93 rows=469901 width=24)
                                                               ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=30889.75..1086907.93 rows=469901 width=24)
                                                                     Hash Key: lineitem.l_orderkey
                                                                     ->  Hash Join  (cost=30889.75..1077509.90 rows=469901 width=24)
                                                                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                                           ->  Seq Scan on lineitem  (cost=0.00..884422.56 rows=59999456 width=28)
                                                                           ->  Hash  (cost=30299.75..30299.75 rows=47200 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice5; segments: 3)  (cost=627.74..30299.75 rows=47200 width=4)
                                                                                       ->  Bitmap Heap Scan on part  (cost=627.74..29670.42 rows=15733 width=4)
                                                                                             Recheck Cond: ((p_type)::text = 'LARGE PLATED COPPER'::text)
                                                                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..623.81 rows=15733 width=0)
                                                                                                   Index Cond: ((p_type)::text = 'LARGE PLATED COPPER'::text)
                                             ->  Hash  (cost=31967.30..31967.30 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.30..31967.30 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..23340.00 rows=1500000 width=8)
                                                         ->  Hash  (cost=2.24..2.24 rows=5 width=4)
                                                               ->  Broadcast Motion 3:3  (slice6; segments: 3)  (cost=1.05..2.24 rows=5 width=4)
                                                                     ->  Hash Join  (cost=1.05..2.18 rows=2 width=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.08 rows=8 width=8)
                                                                           ->  Hash  (cost=1.04..1.04 rows=1 width=4)
                                                                                 ->  Broadcast Motion 3:3  (slice7; segments: 3)  (cost=0.00..1.04 rows=1 width=4)
                                                                                       ->  Seq Scan on region  (cost=0.00..1.02 rows=1 width=4)
                                                                                             Filter: (r_name = 'AFRICA'::bpchar)
                                 ->  Hash  (cost=1507.00..1507.00 rows=100000 width=8)
                                       ->  Seq Scan on supplier  (cost=0.00..1507.00 rows=100000 width=8)
                           ->  Hash  (cost=1.42..1.42 rows=25 width=30)
                                 ->  Broadcast Motion 3:3  (slice8; segments: 3)  (cost=0.00..1.42 rows=25 width=30)
                                       ->  Seq Scan on nation n2  (cost=0.00..1.08 rows=8 width=30)
 Optimizer: Postgres-based planner
(53 rows)

